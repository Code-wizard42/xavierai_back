# Name of your application. Used to uniquely configure containers.
service: xavier-ai-backend

# Name of the container image.
image: temic137/xavier-ai-backend

# Deploy to these servers.
servers:
  web:
    - YOUR_SERVER_IP_HERE  # Replace with your server IP

# Enable SSL auto certification via Let's Encrypt
proxy:
  ssl: true
  host: YOUR_DOMAIN_HERE  # Replace with your domain
  app_port: 3000

# Credentials for your image host.
registry:
  # Using Docker Hub
  username: temic137
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: amd64

# Inject ENV variables into containers
env:
  clear:
    FLASK_ENV: production
    PORT: 3000
    USE_FALLBACK_EMBEDDINGS: "true"
    USE_LOCAL_LLM: "true"
    UPLOAD_FOLDER: /tmp/uploads
    SESSION_TYPE: filesystem
    SESSION_FILE_DIR: /tmp/flask_session
  secret:
    - SECRET_KEY
    - QDRANT_API_KEY
    - QDRANT_URL
    - FIREBASE_CREDENTIALS
    - TOGETHER_API_KEY
    - REDIS_URL
    - PAYPAL_CLIENT_ID
    - PAYPAL_CLIENT_SECRET
    - STRIPE_SECRET_KEY
    - STRIPE_PUBLISHABLE_KEY
    - EMAIL_PASSWORD
    - EMAIL_USER

# Use persistent storage volume for uploads and database
volumes:
  - "xavier_data:/tmp/instance"
  - "xavier_uploads:/tmp/uploads"
  - "xavier_logs:/tmp/logs"

# Configure rolling deploys
boot:
  limit: 1
  wait: 10

# Health check configuration
healthcheck:
  path: /health
  port: 3000
  max_attempts: 7
  interval: 20s

# SSH configuration
ssh:
  user: root

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal app logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use accessory services (secrets come from .kamal/secrets).
#
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: valkey/valkey:8
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
